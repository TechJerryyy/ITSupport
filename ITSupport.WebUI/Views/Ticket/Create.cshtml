@model ITSupport.Core.ViewModels.TicketViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
    @using (Html.BeginForm("Create", "Ticket", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <!----- Form ---->
        <div class="mainDiv">
            <!----- Form ---->
            <div class="formDiv">
                <div class="topTitleHead pb20">
                    <h1 style="color:indianred; font-size:30px"><strong>Create Ticket</strong></h1>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="text-danger" style="color:red">
                    @ViewBag.Message
                </div>
                <div class="formSection">
                    <div class="inputBox">
                        <label class="form-label"><strong>Ticket Name</strong><strong style="color:red;font-size:20px">*</strong></label>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @placeholder = "Enter Name" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        <label class="form-label"><strong>Assign To</strong><strong style="color:red;font-size:20px">*</strong></label>
                        @Html.DropDownListFor(model => model.AssignTo, new SelectList(Model.AssignToDropDown, "Id", "Name"), "--Select-AssignToUser--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignTo, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        <label class="form-label"><strong>Priority</strong><strong style="color:red;font-size:20px">*</strong></label>
                        @Html.DropDownListFor(model => model.PriorityId, new SelectList(Model.PriorityDropDown, "Id", "Name"), "--Select-Priority--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        <label class="form-label"><strong>Type</strong><strong style="color:red;font-size:20px">*</strong></label>
                        @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.TypeDropDown, "Id", "Name"), "--Select-Type--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        <label class="form-label"><strong>Status</strong><strong style="color:red;font-size:20px">*</strong></label>
                        @Html.DropDownListFor(model => model.StatusId, new SelectList(Model.StatusDropDown, "Id", "Name"), "--Select-Status--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        <label class="form-label"><strong>Image</strong></label>
                        <input type="file" id="file" name="file" class="form-control" />
                    </div>
                </div>
                <div class="inputBox">
                    <button class="btnDiv">Create</button>
                </div>
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>

        </div>
        <!----- END Form ---->
    }
</body>
</html>