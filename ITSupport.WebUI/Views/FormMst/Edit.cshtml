@model ITSupport.Core.ViewModels.FormMstViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html lang="en-us">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <!----- Form ---->
        <div class="mainDiv">
            <!----- Form ---->
            <div class="formDiv">
                <div class="topTitleHead pb20">
                    <h1> Edit Form</h1>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="text-danger" style="color:red">
                    @ViewBag.Message
                </div>
                <div class="formSection">
                    <div class="inputBox">
                        @Html.LabelFor(model => model.Name)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @placeholder = "Enter Name" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        @Html.LabelFor(model => model.NavigateURL)
                        @Html.EditorFor(model => model.NavigateURL, new { htmlAttributes = new { @placeholder = "NavigateURL" } })
                        @Html.ValidationMessageFor(model => model.NavigateURL, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        @Html.LabelFor(model => model.ParentFormId)
                        @Html.DropDownListFor(model => model.ParentFormId, new SelectList(Model.FormDropDowns, "ParentFormId", "ParentFormName"), "--Select-ParentFormName--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParentFormId, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        @Html.LabelFor(model => model.FormAccessCode)
                        @Html.EditorFor(model => model.FormAccessCode, new { htmlAttributes = new { @class = "FormAccessCode", @style = "text-transform:uppercase", @placeholder = "Enter Code" } })
                        @Html.ValidationMessageFor(model => model.FormAccessCode, "", new { @class = "errorMsg" })
                    </div>
                    <div class="inputBox">
                        @Html.LabelFor(model => model.DisplayIndex)
                        @Html.EditorFor(model => model.DisplayIndex, new { htmlAttributes = new { @placeholder = "0" } })
                        @Html.ValidationMessageFor(model => model.DisplayIndex, "", new { @class = "errorMsg" })
                    </div>
                    <div class="" style="margin-inline-start:17px">
                        <label>Is Active:</label>
                        @Html.CheckBoxFor(model => model.IsActive, new { @class = "", @id = "isactive" })
                    </div>
                </div>
                <div class="inputBox">
                    <button class="btnDiv">Edit</button>
                </div>
                <div>
                    @Html.ActionLink("Back to List", "Index", "FormMst")
                </div>
            </div>

        </div>
        <!----- END Form ---->
    }
</body>
</html>