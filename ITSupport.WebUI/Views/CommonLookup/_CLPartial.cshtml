@model ITSupport.Core.Models.CommonLookup
<div class="modal-header">
    @if (Model.IsEdit)
    {<span class="modal-title">Edit CommonLookup </span>
        <a href="#" class="close" data-dismiss="modal">&times;</a>
    }
    else
    {<span class="modal-title">Create CommonLookup </span>
        <a href="#" class="close" data-dismiss="modal">&times;</a>
    }
</div>
<div class="modal-body">
    <form id="Lookupform">
        <div id="CommonLookupError"></div>
        <div>
            <label>Config Name:</label>
            @Html.TextBoxFor(model => model.ConfigName, new { @class = "form-control", @placeholder = "Enter Config Name", @id = "ConfigName", onkeyup = "ValidationMessage()" })
            <span id="configNameError" style="color:red"></span>
        </div>
        <br />
        <div>
            <label>Config Key:</label>
            @Html.TextBoxFor(model => model.ConfigKey, new { @class = "form-control", @placeholder = "Enter Config Key", @id = "ConfigKey", onkeyup = "ValidationMessage()" })
            <span id="configKeyError" style="color:red"></span>
        </div>
        <br />
        <div>
            <label>Config Value:</label>
            @Html.TextBoxFor(model => model.ConfigValue, new { @class = "form-control", @placeholder = "Enter Config Value", @id = "ConfigValue", onkeyup = "ValidationMessage()" })
            <span id="configValueError" style="color:red"></span>
        </div>
        <br />
        <div>
            <label>DisplayOrder:</label>
            @Html.TextBoxFor(model => model.DisplayOrder, new { @class = "form-control", @placeholder = "0" })
        </div>
        <br />
        <div>
            <label>Description:</label>
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @placeholder = "Enter Description", onkeyup = "ValidationMessage()" })
        </div>
        <br />
        <div>
            <label>Is Active:</label>
            @Html.CheckBoxFor(model => model.IsActive, new { @class = "", @id = "isactive" })
        </div>
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.IsEdit, new { @id = "IsEdit" })
    </form>
    <div class="modal-footer" style="align-content:flex-end">
        <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
        <a href="#" id="btnSubmit" class="btn btn-success" onclick="CLSave()">
            @if (Model.IsEdit)
            {<span>Update</span> }
            else
            {<span>Save</span>}
        </a>
    </div>
</div>

<script>
    function CLSave() {
        isSaveClicked = true;
        var form = $("#Lookupform").serialize();
        var IsEdit = $("#IsEdit").val();
        var configName = $("#ConfigName").val();
        var configKey = $("#ConfigKey").val();
        var configValue = $("#ConfigValue").val();
        if (configName != '' && configKey != '' && configValue != '') {
            var url = IsEdit == 'False' ? '/CommonLookup/Create' : '/CommonLookup/Edit';
            $.ajax({
                type: 'POST',
                url: url,
                data: form,
                success: function (data) {
                    debugger;
                    if (data == "False") {
                        alert("Common Lookup Already Exists");
                    }
                    else {
                        $("#CLModal").modal("hide");
                        $.ajax({
                            type: 'GET',
                            url: "/CommonLookup/Index",
                            success: function () {
                            }
                        }).done(function (partialViewResult) {
                            $("#CommonLookupManagement").html(partialViewResult);
                            $("#CLModal").modal("hide");
                            $('.modal-backdrop').remove();
                        });
                    }
                }
            })
        }
        else {
            ValidationMessage();
        }
    }
    function ValidationMessage() {

        if (isSaveClicked) {
            var configName = $("#ConfigName").val();
            var configKey = $("#ConfigKey").val();
            var configValue = $("#ConfigValue").val();
            if (configName == '') {
                $("#configNameError").text("Config Name is required.")
            }
            else {
                $("#configNameError").text("")
            }
            if (configKey == '') {
                $("#configKeyError").text("Config Key is required.")

            }
            else {
                $("#configKeyError").text("")
            }
            if (configValue == '') {
                $("#configValueError").text("Config Value is required.")

            }
            else {
                $("#configValueError").text("")
            }
        }
    }
</script>
